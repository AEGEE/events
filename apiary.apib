FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# oms-events

Everything related to events in the oms. You can create, list, edit, ... events.
Please note this document is still a draft. The shown queries might not or not fully be implemented yet. 
This is just to create a starting point for the development

# Group Event-related

## Events Database [/]

### List All Events [GET]

This gives a full listing of all events in the database.
You most likely won't use this one except you are programming another microservice needing the full monty of events

+ Response 200 (application/json)

        [
            {
                "_id": "57545087bc5d433f1656225c",
                "name": "Develop Yourself ",
                "starts": "2015-12-11T14:00:00.000Z",
                "ends": "2015-12-14T11:00:00.000Z",
                "description": "awesome training event",
                "max_participants": 22,
                "application_deadline": "2015-11-30T00:00:00.000Z",
                "application_status": "closed",
                "status": "draft",
                "type": "non-statutory",
                "organizing_locals": [
                    {
                        "foreign_id": "DRE",
                        "name": "AEGEE-Dresden",
                    }
                ],
                "url": "/single/57545087bc5d433f1656225c",
                "id": "57545087bc5d433f1656225c"
            },
            {
                "_id": "5754557ddc1639f652285755",
                "name": "EPM Zagreb",
                "starts": "2017-02-23T00:00:00.000Z",
                "ends": "2017-02-27T00:00:00.000Z",
                "description": "Drafting the Action Agenda and drinking cheap vodka",
                "max_participants": 300,
                "application_deadline": "2017-01-01T00:00:00.000Z",
                "application_status": "closed",
                "status": "draft",
                "type": "statutory",
                "organizing_locals": [
                    {
                        "foreign_id": "ZAG",
                        "name": "AEGEE-Zagreb"
                    },
                    {
                        "foreign_id": "SOF",
                        "name": "AEGEE-Sofia"
                    }
                ],
                "url": "/single/5754557ddc1639f652285755",
            }
        ]

### Create a new event [POST]

Add a new event, data which is left out in the first request is optional.
If organizing local is not specified, the local of the user will be assumed.
The creating user is automatically assigned organizer status

+ Request (application/json)

        {
            "name": "Develop Yourself ",
            "starts": "2015-12-11 15:00",
            "ends": "2015-12-14 12:00",
            "description": "awesome training event",
            "application_deadline": "2015-11-30",
            "organizing_locals": [
                {
                    "foreign_id": "DDD"
                }
            ],
            "type": "non-statutory",
            "max_participants": 22
        }

+ Response 201 (application/json)

        {
            "name": "Develop Yourself ",
            "starts": "2015-12-11T15:00:00.000Z",
            "ends": "2015-12-14T12:00:00.000Z",
            "description": "awesome training event",
            "max_participants": 22,
            "_id": "57545087bc5d433f1656225c",
            "organizers": [
                {
                    "first_name": "Cave",
                    "last_name": "Johnson",
                    "foreign_id": "cave.johnson",
                }
            ],
            "application_fields": [
                {
                  "name": "motivation",
                },
                {
                  "name": "allergies",
                },
                {
                  "name": "disabilities",
                }
            ],
            "application_status": "closed",
            "application_deadline": "2015-11-30T00:00:00.000Z",
            "status": "draft",
            "type": "non-statutory",
            "organizing_locals": [
                {
                  "name": "AEGEE-Dresden",
                  "foreign_id": "DRE",
                }
            ],
            "url": "/single/57545087bc5d433f1656225c",
        }
            
## Events Details [/single/{event_id}]

Details actions should only be available to superusers or users linked with the event

+ Parameters
    + event_id (string) - ID of the event to get details to


### View event details [GET]

Gets a more detailed view for an event.
For organizers or participants list, use the specialized API-Calls

+ Response 200 (application/json)

        {
            "id": "57545670dc1639f652285762",
            "url": "/events/single/1",
            "name": "Develop Yourself",
            "starts": "2015-08-05T08:40:51.620Z",
            "ends": "2015-08-05T08:40:51.620Z",
            "description": "An intense weekend full of learning about yourself, communication, teamwork and other soft-skills",
            "organizing_local": "AEGEE-Dresden",
            "type": "non-statutory",
            "max_participants": 22,
            "application_deadline": "2017-01-01T00:00:00.000Z",
            "application_fields": [
                {
                    "name": "Motivation",
                    "_id": "57545670dc1639f652285762"
                },
                {
                    "name": "Allergies",
                    "_id": "57545670dc1639f652285761"
                },
                {
                    "name": "Disabilities",
                    "_id": "57545670dc1639f652285760"
                },
                {
                    "name": "TShirt-Size",
                    "_id": "57545670dc1639f65228575f"
                },
                {
                    "name": "Meaning of Life",
                    "_id": "57545670dc1639f65228575e"
                }
            ],
            "participants_list" : [
                {
                    "foreign_id": "max.mustermann",
                    "first_name": "Max",
                    "last_name": "Mustermann",
                    "status": "requesting",
                    "application" : [
                        {
                            "field_id": "57545670dc1639f652285762",
                            "value": "Unmotivated",
                        }, {
                            "field_id": "57545670dc1639f652285761",
                            "value": "Gluten, Lactose, Germans",
                        }, {
                            "field_id": "57545670dc1639f652285760",
                            "value": "No disabilities",
                        }, {
                            "field_id": "57545670dc1639f65228575f",
                            "value": "XS",
                        }, {
                            "field_id": "57545670dc1639f65228575e",
                            "value": "42",
                        }
                    ],
                }, {
                    "foreign_id": "heinz.hammer",
                    "first_name": "Heinz",
                    "last_name": "Hammer",
                    "status": "pending",
                    "application": [],
                }, {
                    "foreign_id": "frank.fortune",
                    "first_name": "Frank",
                    "last_name": "Fortune",
                    "status": "accepted",
                    "application": [],
                }
            ],
            "organizers_list": [
                {
                    "foreign_id": "ingo.indiana",
                    "first_name": "Ingo",
                    "last_name": "Indiana",
                    "role": "full"
                }, {
                    "foreign_id": "karl.kühne2",
                    "first_name": "Karl",
                    "last_name": "Kühne"
                    "role": "readonly"
                }
            ],
        }
    
### Update an event [PUT]

Change details about one event. 
For changes in participants or organizers, use events/{id}/participants or /organizers.
Can only be done by an organizer

+ Request (application/json)

            {
                "description": "It's awesome",
            }
            
+ Response 201 (application/json)

        {
            "id": 1,
            "url": "/events/single/1",
            "name": "Develop Yourself",
            "starts": "2015-08-05T08:40:51.620Z",
            "ends": "2015-08-05T08:40:51.620Z",
            "description": "It's awesome",
            "organizing_local": "AEGEE-Dresden",
            "type": "non-statutory",
            "max_participants": 22,
            "enrolled_participants": 3,
        }
        
### Remove an event [DELETE]

Removes the current event. Can only be done by an organizer. 
Internally it won't be deleted but just set to deleted, but it won't appear in any listing. Details are however still available

+ Response 200 (text/plain)
        
        Event successfully deleted
        

## Events Participants [/single/{event_id}/participants]

### List all enrolled participants [GET]

Returns all participants in this event and their enrolment status

+ Response 200 (application/json)

        [
            {
                "foreign_id": "max.mustermann",
                "first_name": "Max",
                "last_name": "Mustermann",
                "application_status": "requesting",
                "application" : [
                    {
                        "field_id": "57545670dc1639f652285762",
                        "value": "Unmotivated",
                    }, {
                        "field_id": "57545670dc1639f652285761",
                        "value": "Gluten, Lactose, Germans",
                    }, {
                        "field_id": "57545670dc1639f652285760",
                        "value": "No disabilities",
                    }, {
                        "field_id": "57545670dc1639f65228575f",
                        "value": "XS",
                    }, {
                        "field_id": "57545670dc1639f65228575e",
                        "value": "42",
                    }
                ],
            }, {
                "foreign_id": "heinz.hammer",
                "first_name": "Heinz",
                "last_name": "Hammer",
                "application_status": "pending",
                "application": [],
            }, {
                "foreign_id": "frank.fortune",
                "first_name": "Frank",
                "last_name": "Fortune",
                "application_status": "accepted",
                "application": [{
                        "field_id": "57545670dc1639f652285762",
                        "value": "I like AIESEC"
                    }],
            }
        ],
    
### Apply to an event [POST]

As long as subscription is open, any user can sign up for an event.
All user data that can be taken from the user's account will be used
(first_name, last_name, id). Status will be "requesting".
The application is an array with the _id of the field and the value you want to put. 
The field needs to exist, but not all fields need to be filled

+ Request (application/json)

        {
            "application": [
                {
                    "field_id": "57545670dc1639f652285762",
                    "value": "I am unmotivated"
                }, {
                    "field_id": "57545670dc1639f652285761",
                    "value": "Glutenintolerant vegan, doesn't like tofu"
                }, {
                    "field_id": "57545670dc1639f652285760",
                    "value": "Leg missing"
                }
            ]
        }
        
+ Response 201 (text/plain)
    
    + Headers
    
            Location: /single/57545670dc1639f652285762/participants/hanz.wurst
    
    + Body

            Your application as participant has been recorded.
        
        
## Application management [/single/{event_id}/participants/{user_id}]

### Get one specfic application [GET]

Returns the details for this specific application. 
Succeeds if either the user is the owner of the application, the user is organizer or participant and the application is closed, the user is board member of the same local

+ Response 200 (application/json)

        {
          "foreign_id": "cave.johnson3",
          "application": [
            {
              "field_id": "57545670dc1639f652285762",
              "value": "Also not very motivated"
            },
            {
              "field_id": "57545670dc1639f652285761",
              "value": "Internet Explorer"
            },
            {
              "field_id": "57545670dc1639f652285760",
              "value": "Still loading microsoft startpage"
            }
          ],
          "application_status": "requesting"
        }
        
### Edit an application [PUT]

Can be used either by the owner of the application to change his application again (if the application is still open) or by an organizer to change the application_status to approved/etc

+ Request
        
        {
            "application_status": "approved"
        }
        
+ Response 200 (application/json)

        {
          "foreign_id": "cave.johnson3",
          "application": [
            {
              "field_id": "57545670dc1639f652285762",
              "value": "Also not very motivated"
            },
            {
              "field_id": "57545670dc1639f652285761",
              "value": "Internet Explorer"
            },
            {
              "field_id": "57545670dc1639f652285760",
              "value": "Still loading microsoft startpage"
            }
          ],
          "application_status": "approved"
        }

    
## Events Organizers [/single/{event_id}/organizers]

### List all contributing organizers [GET]

Organizers have full access to all event details

+ Response 200 (applicaton/json)

        [
            {
                "id": 9,
                "first_name": "Ingo",
                "last_name": "Indiana"
            }, {
                "id": 22,
                "first_name": "Karl",
                "last_name": "Kühne"
            }
        ]
        
### Add an organizer [POST]

Adds a new organizer to the list of people with access. Can only be done if you are organizer yourself.

+ Request (application/json)

        {
            "foreign_id": "cave.johnson",
            "role": "full"
        }

+ Response 201 (text/plain)
    
    + Headers
    
            Location: /single/57545670dc1639f65228575d/organizers/cave.johnson2
    
    + Body
    
            User was successfully added to organizers

## Delete an Organizer [/single/{event_id}/organizers/{user_id}]

### Delete an Organizer [DELETE]

Removes an organizer from the list. The user needs to be organizer himself to do that and there must be at least 1 more organizer left

+ Response 200 (text/plain)

        User was deleted as organizer

# Group Other views

## Participation per user [/user/{user_id}/participation]

+ Parameters
    + user_id (number) - ID of the user for that details should be displayed

### List user's participation [GET]

+ Response 200 (application/json)
    
        [
            {
                "id": 1,
                "name": "Develop Yourself",
                "type": "organizer",
                "status": "approved"
            }, {
                "id": 2,
                "name": "EPM Zagreb",
                "type": "participant",
                "status": "requested"
            }
        ]


## Events per antenna [/antenna/{antenna}]

+ Parameters
    + antenna (string) - Name of the antenna the events are requested from

### List events per antenna [GET]

+ Response 200 (application/json)
        
        [
            {
                "id": 1,
                "url": "/events/1",
                "name": "Develop Yourself",
                "starts": "2015-08-05T08:40:51.620Z",
                "ends": "2015-08-05T08:40:51.620Z",
                "description": "An intense weekend full of learning about yourself, communication, teamwork and other soft-skills",
                "organizing_local": "AEGEE-Dresden",
                "type": "non-statutory",
                "max_participants": 22,
                "enrolled_participants": 18,
            }
        ]

## Microservice status [/status/]

Nerdporn and maybe also nice for resource monitoring. Uptime is in Seconds, requests only ocunts since last reboot.

### Get current status [GET]

+ Response 200 (application/json)

        {
            "uptime": 23.5
            "requests": 918293
        }